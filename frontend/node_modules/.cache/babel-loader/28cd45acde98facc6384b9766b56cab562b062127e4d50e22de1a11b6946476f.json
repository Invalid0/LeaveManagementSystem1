{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API = 'http://localhost:4040/api';\nexport const fetchMyLeaves = createAsyncThunk('leaves/fetchMyLeaves', async token => {\n  const res = await axios.get(`${API}/leave/mine`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n});\nexport const applyLeave = createAsyncThunk('leaves/applyLeave', async ({\n  data,\n  token\n}) => {\n  const res = await axios.post(`${API}/leave`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n});\nconst leaveSlice = createSlice({\n  name: 'leaves',\n  initialState: {\n    list: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMyLeaves.fulfilled, (state, action) => {\n      state.list = action.payload;\n    });\n  }\n});\nexport default leaveSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API","fetchMyLeaves","token","res","get","headers","Authorization","data","applyLeave","post","leaveSlice","name","initialState","list","status","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/darshan/Documents/LeaveManagementSystem/frontend/src/features/leaves/leaveSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API = 'http://localhost:4040/api';\n\nexport const fetchMyLeaves = createAsyncThunk('leaves/fetchMyLeaves', async (token) => {\n  const res = await axios.get(`${API}/leave/mine`, {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n  return res.data;\n});\n\nexport const applyLeave = createAsyncThunk('leaves/applyLeave', async ({ data, token }) => {\n  const res = await axios.post(`${API}/leave`, data, {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n  return res.data;\n});\n\nconst leaveSlice = createSlice({\n  name: 'leaves',\n  initialState: {\n    list: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchMyLeaves.fulfilled, (state, action) => {\n        state.list = action.payload;\n      });\n  }\n});\n\nexport default leaveSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,2BAA2B;AAEvC,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,sBAAsB,EAAE,MAAOI,KAAK,IAAK;EACrF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,GAAG,aAAa,EAAE;IAC/CK,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGV,gBAAgB,CAAC,mBAAmB,EAAE,OAAO;EAAES,IAAI;EAAEL;AAAM,CAAC,KAAK;EACzF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACU,IAAI,CAAC,GAAGT,GAAG,QAAQ,EAAEO,IAAI,EAAE;IACjDF,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC,CAAC;AAEF,MAAMG,UAAU,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,aAAa,CAACmB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,UAAU,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}